import { Component,Input } from '@angular/core';
import { Inject } from '@angular/core';
import {
  MAT_DIALOG_DATA,
  MatDialogRef,
  MatDialog
} from '@angular/material/dialog';
import { Recipe, Ingredient } from '../../recipe.model';


// ----------------- Button -----------------

@Component({
  selector: 'app-edit-recipe-button',
  templateUrl: 'edit-recipe-button.component.html',
  styleUrls: ['edit-recipe-button.component.scss']
})

export class EditRecipeButtonComponent{
  @Input() recipe: Recipe = {
    name: '',
    ingredients: [],
    instructions: [],
    image: '',
    tags: '',
    rating: 0,
    notes: '',
    source: '',
    date: '',
    id: 0
  };

  id!: number;
  date!: Date;
  name!: string;
  ingredients!: string;
  instructions!: string;
  image!: string;
  tags!: string;
  rating!: number;
  notes!: string;
  source!: string;

  constructor(public dialog: MatDialog) {}

  openDialog(): void {
    const dialogRef = this.dialog.open(EditRecipeDialog, {
      width: '50vw',
      minWidth: '400px',
      data: {
        // TODO: determine if this is necessary -- I think ID is generated by the database
        id: this.id = this.recipe.id,
        date: new Date(),
        name: this.name = this.recipe.name,
        // TODO: split ingredients string into array of Ingredients objects
        ingredients: this.ingredients = JSON.stringify(this.recipe.ingredients),
        // TODO: split instructions string into array of strings
        instructions: this.instructions = this.recipe.instructions.toString(),
        // TODO: handle empty optional fields
        image: this.image = this.recipe.image,
        tags: this.tags = this.recipe.tags,
        rating: this.rating = this.recipe.rating,
        notes: this.notes = this.recipe.notes,
        source: this.source = this.recipe.source,
      },
    });

    dialogRef.afterClosed().subscribe((result) => {
      console.log(`Edit Recipe Form closed:
        ${(result == undefined) 
          ? "Nothing submitted" 
          : `Edited recipe with id # ${result.id}
          date: ${result.date.toLocaleString()}
          name: ${result.name}
          ingredients: ${result.ingredients}
          instructions: ${result.instructions}
          image: ${result.image}
          tags: ${result.tags}
          rating: ${result.rating}
          notes: ${result.notes}
          source: ${result.source}`  
        }`);
    });
  }
}

// ----------------- [Populate] Form -----------------
@Component({
  selector: 'edit-recipe-form',
  templateUrl: 'edit-recipe-form.component.html',
  styleUrls: ['edit-recipe-form.component.scss']
})

export class EditRecipeDialog {
  @Input() recipe: Recipe = {
    name: '',
    ingredients: [],
    instructions: [],
    image: '',
    tags: '',
    rating: 0,
    notes: '',
    source: '',
    date: '',
    id: 0
  };
  constructor(
    public dialogRef: MatDialogRef<EditRecipeDialog>,
    @Inject(MAT_DIALOG_DATA) public data: Recipe
  ) {}

  onNoClick(): void {
    this.dialogRef.close();
  }
}